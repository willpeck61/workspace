/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'will' at '15/11/16 15:08' with Gradle 3.2
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2/userguide/tutorial_java_projects.html
 */

buildscript {
  ext {
    springBootVersion = '1.4.2.RELEASE'
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
  }
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.bmuschko:gradle-tomcat-plugin:2.2.4"
  }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.tomcat'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
  // The production code uses the SLF4J logging API at compile time
  compile 'org.slf4j:slf4j-api:1.7.21'
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.springframework.boot:spring-boot-devtools")
  
  compile('org.springframework.boot:spring-boot-starter')
  testCompile('org.springframework.boot:spring-boot-starter-test')
  
  // JSON
  compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
  
  
  // JPA
  compile("org.springframework.boot:spring-boot-starter-data-jpa")
  runtime("mysql:mysql-connector-java")
  
  // JSP
  compile("org.apache.tomcat.embed:tomcat-embed-jasper:8.5.6")
  compile("javax.servlet:jstl:1.2")
  
  // Security
  compile("org.springframework.boot:spring-boot-starter-security")
  testCompile("org.springframework.security:spring-security-test:4.0.1.RELEASE")
  compile("org.springframework.security:spring-security-taglibs:4.0.1.RELEASE")
    
  // Declare the dependency for your favourite test framework you want to use in your tests.
  // TestNG is also supported by the Gradle Test task. Just change the
  // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
  // 'test.useTestNG()' to your build script.
  testCompile 'junit:junit:4.12'
}
