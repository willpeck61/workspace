buildscript {
    ext {
        springBootVersion = '1.3.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
    }
}
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.bmuschko:gradle-tomcat-plugin:2.2.4"
  }
}


apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 

jar {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
}


repositories {
    mavenCentral()
}

configurations {
    dev
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    // JPA
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    runtime("mysql:mysql-connector-java")
    // JSP
    compile("org.apache.tomcat.embed:tomcat-embed-jasper:8.0.23")
    compile("javax.servlet:jstl:1.2")
    // Security
    compile("org.springframework.boot:spring-boot-starter-security")
    testCompile("org.springframework.security:spring-security-test:4.0.1.RELEASE")
	compile 'org.springframework.security:spring-security-taglibs:4.0.1.RELEASE'
	// GSON
    compile("com.google.code.gson:gson:1.7.2")
	compile("org.webjars:jquery:2.0.3-1")
    compile("org.webjars:bootstrap:3.3.5")
    compile("org.json:json:20090211")
    // cucumber
    testCompile("info.cukes:cucumber-spring:1.2.3")
    testCompile("info.cukes:cucumber-java:1.2.3")
    testCompile("info.cukes:cucumber-junit:1.2.3")
    testCompile("junit:junit:4.11")
	testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.2.1'
	dev("org.springframework.boot:spring-boot-devtools")
}

bootRun {
    // Use Spring Boot DevTool only when we run Gradle bootRun task
    classpath = sourceSets.main.runtimeClasspath + configurations.dev
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task cucumber() {
	dependsOn assemble, compileTestJava
	doLast {
		javaexec {
			main = 'cucumber.api.cli.Main'
			classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
			args = ['--plugin', 'pretty', '--glue', 'flatfinder', 'src/test/resources']
		}
	}
}

test {
    reports {
        junitXml.enabled = false
        html.enabled = false
    }               
}

configurations {
    all {
        //exclude module: 'logback-classic'
        //exclude module: 'log4j-over-slf4j'
    }
	cucumberRuntime {
		extendsFrom testRuntime
	}
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}
